import { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import ghnLogo from "../../assets/images/ghn.png";
import shipperImage from "../../assets/images/shipper.jpg";
import { axiosInstance } from "../../api";
import Swal from "sweetalert2"; // Import SweetAlert2
import styles from "./ShipperLogin.module.css";

export default function ShipperLogin() {
    const [employeeId, setEmployeeId] = useState("");
    const [password, setPassword] = useState("");
    const [showPassword, setShowPassword] = useState(false);
    const [errorMessage, setErrorMessage] = useState("");
    const navigate = useNavigate();

    const handleLogin = async () => {
        try {
            setErrorMessage(""); // X√≥a th√¥ng b√°o l·ªói tr∆∞·ªõc khi th·ª≠ ƒëƒÉng nh·∫≠p

            const response = await axiosInstance.post("/shipper/login", {
                employeeId,
                password,
            });

            // API tr·∫£ v·ªÅ token v√† th√¥ng tin shipper n·∫øu ƒëƒÉng nh·∫≠p th√†nh c√¥ng
            const { token, shipper } = response.data;

            // L∆∞u token v√† th√¥ng tin shipper v√†o localStorage
            localStorage.setItem("shipperToken", token);
            localStorage.setItem("shipperId", shipper.id);
            localStorage.setItem("shipperName", shipper.fullName);

            // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            Swal.fire({
                title: 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng!',
                text: `Ch√†o m·ª´ng ${shipper.fullName}`,
                icon: 'success',
                confirmButtonText: 'OK',
            });

            // Chuy·ªÉn h∆∞·ªõng t·ªõi dashboard
            navigate("/shipper-dashboard");
        } catch (err) {
            console.error("[ShipperLogin] L·ªói:", err);

            // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥
            Swal.fire({
                title: 'L·ªói!',
                text: err.response?.data?.message || "ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i.",
                icon: 'error',
                confirmButtonText: 'OK',
            });

            setErrorMessage(
                err.response?.data?.message || "ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i."
            );
        }
    };

    return (
        <div className={styles.container}>
            <div className={styles.loginBox}>
                <div className={styles.backHome}>
                    <Link to="/" className={styles.backHomeButton}>
                        ‚¨Ö Quay l·∫°i Trang Ch·ªß
                    </Link>
                </div>

                <div className={styles.image}>
                    <img src={shipperImage} alt="Shipper" />
                </div>

                <div className={styles.form}>
                    <img src={ghnLogo} alt="GHN Logo" className={styles.ghnLogo} />
                    <h2 className={styles.loginTitle}>ƒêƒÉng nh·∫≠p Shipper</h2>

                    {errorMessage && <p className={styles.errorMessage}>{errorMessage}</p>}

                    <div className={styles.inputGroup}>
                        <label>M√£ nh√¢n vi√™n</label>
                        <input
                            type="text"
                            placeholder="Nh·∫≠p m√£ nh√¢n vi√™n"
                            value={employeeId}
                            onChange={(e) => setEmployeeId(e.target.value)}
                        />
                    </div>

                    <div className={`${styles.inputGroup} ${styles.passwordGroup}`}>
                        <label>M·∫≠t kh·∫©u</label>
                        <input
                            type={showPassword ? "text" : "password"}
                            placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                        />
                        <button
                            type="button"
                            className={styles.togglePassword}
                            onClick={() => setShowPassword(!showPassword)}
                        >
                            üëÅ
                        </button>
                    </div>

                    <button className={styles.loginButton} onClick={handleLogin}>
                        ƒêƒÉng nh·∫≠p
                    </button>

                    <div className={styles.authGuide}>
                        B·∫°n mu·ªën tr·ªü th√†nh nh√¢n vi√™n?{" "}
                        <Link to="/shipper-register" className={styles.registerLink}>
                            ƒêƒÉng k√≠ ngay
                        </Link>
                    </div>
                </div>
            </div>
        </div>
    );
}
