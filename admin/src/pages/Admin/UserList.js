import React, { useState, useEffect } from "react";
import axios from "axios";
import Sidebar from "../../components/Sidebar";
import TopBar from "../../components/TopBar";
import "../../styles/UserList.css"; // Import CSS

const API_URL = "http://localhost:5000/api/users";

const UserList = () => {
    const [users, setUsers] = useState([]);
    const [searchTerm, setSearchTerm] = useState("");
    const [error, setError] = useState("");

    useEffect(() => {
        const fetchUsers = async () => {
            try {
                const token = localStorage.getItem("authToken"); // L·∫•y token t·ª´ localStorage
                
                if (!token) {
                    setError("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
                    return;
                }

                const res = await axios.get(`${API_URL}/list`, {
                    headers: {
                        Authorization: `Bearer ${token}`, // G·ª≠i token l√™n API
                    },
                });

                console.log("üöÄ API Response:", res.data);
                setUsers(res.data);
            } catch (err) {
                console.error("‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:", err);
                setError(err.response?.data?.message || "L·ªói server!");
            }
        };
        fetchUsers();
    }, []);

    // Chuy·ªÉn ƒë·ªïi ng√†y sinh v·ªÅ ƒë·ªãnh d·∫°ng dd/mm/yyyy
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        if (isNaN(date)) return "Ng√†y kh√¥ng h·ª£p l·ªá";
        return `${String(date.getDate()).padStart(2, "0")}/${String(date.getMonth() + 1).padStart(2, "0")}/${date.getFullYear()}`;
    };

    // L·ªçc ng∆∞·ªùi d√πng theo t√¨m ki·∫øm (theo t√™n, email, s·ªë ƒëi·ªán tho·∫°i)
    const filteredUsers = users.filter(
        (user) =>
            user.FullName.toLowerCase().includes(searchTerm.toLowerCase()) ||
            user.Email.toLowerCase().includes(searchTerm.toLowerCase()) ||
            user.Phone.includes(searchTerm)
    );

    // X√≥a ng∆∞·ªùi d√πng
    const deleteUser = async (userID) => {
        if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y kh√¥ng?")) {
            try {
                await axios.delete(`${API_URL}/${userID}`);
                setUsers(users.filter((user) => user.UserID !== userID));
                console.log("‚úÖ ƒê√£ x√≥a ng∆∞·ªùi d√πng!");
            } catch (err) {
                console.error("‚ùå L·ªói khi x√≥a ng∆∞·ªùi d√πng:", err);
            }
        }
    };

    return (
        <div className="app">
            <div className="app__container">
                <Sidebar />
                <div className="main">
                    <TopBar />
                    <div className="user-list-container">
                        <h2 className="title">Danh s√°ch Ng∆∞·ªùi D√πng</h2>

                        {/* Hi·ªÉn th·ªã t·ªïng s·ªë ng∆∞·ªùi d√πng */}
                        <p className="total-users">T·ªïng s·ªë ng∆∞·ªùi d√πng: {filteredUsers.length}</p>

                        {/* √î t√¨m ki·∫øm */}
                        <div className="search-container">
                            <input
                                type="text"
                                placeholder="T√¨m ki·∫øm ng∆∞·ªùi d√πng theo t√™n, email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i"
                                value={searchTerm}
                                onChange={(e) => setSearchTerm(e.target.value)}
                            />
                        </div>

                        {filteredUsers.length === 0 ? (
                            <p className="text-center text-gray-500">Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o.</p>
                        ) : (
                            <div className="info-list">
                                {filteredUsers.map((user) => (
                                    <ul key={user.UserID} className="user-card">
                                        <li><strong>H·ªç v√† T√™n:</strong> <span>{user.FullName}</span></li>
                                        <li><strong>Ng√†y Sinh:</strong> <span>{formatDate(user.BirthDate)}</span></li>
                                        <li><strong>Email:</strong> <span>{user.Email}</span></li>
                                        <li><strong>S·ªë ƒêi·ªán Tho·∫°i:</strong> <span>{user.Phone}</span></li>
                                        <li><strong>ƒê·ªãa Ch·ªâ:</strong> <span>{user.Address}</span></li>
                                        <li><strong>T√†i kho·∫£n:</strong><span>{user.Username}</span></li>                                        
                                        {/* N√∫t X√≥a t√†i kho·∫£n */}
                                        <li>
                                            <button className="delete-btn" onClick={() => deleteUser(user.UserID)}>
                                                X√≥a t√†i kho·∫£n
                                            </button>
                                        </li>
                                    </ul>
                                ))}
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default UserList;
